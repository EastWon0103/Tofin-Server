service-url: /api/board-service

out-service:
  credit:
    url: http://localhost:8085

server:
  port: 8082
  shutdown: graceful

spring:
  config:
    import: "application-keys.yml"
  application:
    name: board-application
  cloud:
    inetutils:
      preferred-networks: 192.168
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${mysql.url}
    username: ${mysql.username}
    password: ${mysql.password}

  kafka:
    consumer:
      group-id: board-group # Group Id
      auto-offset-reset: earliest
      bootstrap-servers: localhost:10000,localhost:10001,localhost:10002
    producer:
      bootstrap-servers: localhost:10000,localhost:10001,localhost:10002

  sql:
    init:
      mode: always
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show-sql: true
        highlight_sql: true
        use_sql_comments: true
        format_sql: true
    defer-datasource-initialization: true

springdoc:
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  packages-to-scan: com.pda
  use-fqn: true

eureka:
  instance:
    hostname:
    healthCheckUrlPath: /actuator/health
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 10
    prefer-ip-address: true
  client:
    eureka-server-port: 8761
    register-with-eureka: false
    fetch-registry: false
    disable-delta: false
    service-url:
      defaultZone: http://192.168.2.20:8761/eureka

management:
  endpoint:
    shutdown:
      enabled: true
    health:
      enabled: true
  endpoints:
    web:
      exposure:
        include: shutdown, health

logging:
  level:
    com.netflix: ERROR
    org.apache.kafka: ERROR